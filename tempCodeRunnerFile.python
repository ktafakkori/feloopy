from feloopy import *

N = range(10)
U = range(9)

np.random.seed(0)
c = np.random.randint(1, 10, size=(len(N), len(N)))

def tsp(c):

    # Environment
    m = model('exact', 'tsp', 'ortools',Key=0) 
    for i, j in sets(N, N):
        c[i][i] = 0
        c[i][j] = c[j][i]

    # Variables
    x = m.bvar('x', [N, N])
    u = m.ivar('u', [N])

    # Objective
    m.obj(sum(c[i, j]*x[i, j] for i, j in sets(N, N)))

    # Constraints
    for j in N:
        m.con(sum(x[i, j] for i in N if i != j) |e| 1)

    for i in N:
        m.con(sum(x[i, j] for j in N if j != i) |e| 1)

    for i, j in sets(U, N):
        if i != j:
            m.con(u[i] - u[j] + x[i, j] * len(N) |l| len(N)-1)

    # Solve
    m.sol(['min'], 'scip')

    return m

sensitivity(tsp, [c], [-6,6],Table=True, Plot=True)